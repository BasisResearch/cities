## Admin server used for checks. It's disabled by default unless a port is specified.
# admin-server-port = 3001

## The database role to use when no client authentication is provided
db-anon-role = "web_anon"

## Notification channel for reloading the schema cache
db-channel = "pgrst"

## Enable or disable the notification channel
db-channel-enabled = true

## Enable in-database configuration
db-config = true

## Function for in-database configuration
## db-pre-config = "postgrest.pre_config"

## Extra schemas to add to the search_path of every request
db-extra-search-path = "public"

## Limit rows in response
# db-max-rows = 1000

## Allow getting the EXPLAIN plan through the `Accept: application/vnd.pgrst.plan` header
# db-plan-enabled = false

## Number of open connections in the pool
db-pool = 10

## Time in seconds to wait to acquire a slot from the connection pool
# db-pool-acquisition-timeout = 10

## Time in seconds after which to recycle pool connections
# db-pool-max-lifetime = 1800

## Time in seconds after which to recycle unused pool connections
# db-pool-max-idletime = 30

## Allow automatic database connection retrying
# db-pool-automatic-recovery = true

## Stored proc to exec immediately after auth
# db-pre-request = "stored_proc_name"

## Enable or disable prepared statements. disabling is only necessary when behind a connection pooler.
## When disabled, statements will be parametrized but won't be prepared.
db-prepared-statements = true

## The name of which database schema to expose to REST clients
db-schemas = "api"

## How to terminate database transactions
## Possible values are:
## commit (default)
##   Transaction is always committed, this can not be overriden
## commit-allow-override
##   Transaction is committed, but can be overriden with Prefer tx=rollback header
## rollback
##   Transaction is always rolled back, this can not be overriden
## rollback-allow-override
##   Transaction is rolled back, but can be overriden with Prefer tx=commit header
db-tx-end = "commit"

## The standard connection URI format, documented at
## https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING
db-uri = "postgresql://postgres@34.123.100.76:5432/cities"

# jwt-aud = "your_audience_claim"

## Jspath to the role claim key
jwt-role-claim-key = ".role"

## Choose a secret, JSON Web Key (or set) to enable JWT auth
## (use "@filename" to load from separate file)
# jwt-secret = "secret_with_at_least_32_characters"
jwt-secret-is-base64 = false

## Enables and set JWT Cache max lifetime, disables caching with 0
# jwt-cache-max-lifetime = 0

## Logging level, the admitted values are: crit, error, warn, info and debug.
log-level = "error"

## Determine if the OpenAPI output should follow or ignore role privileges or be disabled entirely.
## Admitted values: follow-privileges, ignore-privileges, disabled
openapi-mode = "follow-privileges"

## Base url for the OpenAPI output
openapi-server-proxy-uri = ""

## Configurable CORS origins
# server-cors-allowed-origins = ""

server-host = "!4"
server-port = 3000

## Allow getting the request-response timing information through the `Server-Timing` header
server-timing-enabled = false

## Unix socket location
## if specified it takes precedence over server-port
# server-unix-socket = "/tmp/pgrst.sock"

## Unix socket file mode
## When none is provided, 660 is applied by default
# server-unix-socket-mode = "660"
